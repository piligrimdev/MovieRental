@model WebApplication1.ViewModels.EditCustomerViewModel
@{
    ViewData["Title"] = "Edit Customer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Model.Customer == null)
{
    <h1>New customer</h1>
}
else
{
    <h1>Edit customer</h1>
}
@*using Используется для того, чтобы блок формы закрылся после блока кода(т.е. после {}) *@

@using (Html.BeginForm("Save", "Customers"))
{
    <p>@Html.ValidationSummary(true, "Please, fill data correctly")</p>
    <div class ="form-group">
        @Html.LabelFor(m => m.Customer.Name)
        @Html.TextBoxFor(m => m.Customer.Name, new {@class = "form-control"})
        @Html.ValidationMessageFor(m => m.Customer.Name)
    </div>

    <div class ="form-group">
        @Html.LabelFor(m => m.Customer.BirthDay)
        @Html.TextBoxFor(m => m.Customer.BirthDay, new {@class = "form-control date"})
        @Html.ValidationMessageFor(m => m.Customer.BirthDay)
    </div>
    
   <div class ="form-group">
        @Html.DropDownListFor(m => m.Customer.MemberShipTypeId, new SelectList(Model.MemberShipTypes, "Id","Name"), "Select Membership type", new { @class = "form-control" } )
        @Html.ValidationMessageFor(m => m.Customer.MemberShipTypeId)
   </div>
   @*HidderFor чтобы поле id не было null*@
   @Html.HiddenFor(m => m.Customer.Id)
   @Html.AntiForgeryToken()
   <button class ="btn btn-primary">Save</button>
}

@*Валидация на стороне клиента*@
@section Scripts{
        <partial name="_ValidationScriptsPartial" />
}
